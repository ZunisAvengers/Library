@model LibraryAspNetCore.ViewModels.OrderViewModel

@{
    ViewData["Title"] = "Info";
}

<h2>Информация о заказе</h2>

<div>
    <h4>Order</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            Дата заказа
        </dt>
        <dd>
            @Model.Order.DateOrder.ToString("D")
        </dd>
        <dt>
            Дата Выдачи заказа
        </dt>
        <dd>
            @Model.Order.DateGet.ToString("D")
        </dd>
        <dt>
            Библиотека:
        </dt>
        <dd>
           <a asp-action="Info" asp-controller="Library" asp-route-id="@Model.Order.Library.Id"><p>@Model.Order.Library.Name</p></a>
        </dd>
        <dt>
            Статус:
        </dt>
        <dd>
            @if (!Model.Order.IsGet)
            {
                <p>Заказ не был выдан</p>
            }
            else if (!Model.Order.DeliveredInLibrary)
            {
                <p>Заказ должен быть вернут до @Model.Order.DateOrder.AddDays(7).ToString("D")</p>
            }
            else if (Model.Order.Notflicetion)
            {
                <p>Должник</p>
            }
            else
            {
                <p>Заказ закрыт</p>
            }
        </dd>
    </dl>
    <h4>Список книг</h4>
    <ul>
        @foreach(var item in Model.Books)
        {
        <li>
           <a asp-action="Info" asp-controller="Home" asp-route-id="@item.Id">@item.Name (@item.Author.Name)</a>
        </li>
        }
    </ul>
</div>
<div>

    @if (!Model.Order.DeliveredInLibrary)
    {
        <div class="btn btn-default"><a asp-action="SetBook" asp-controller="Observer" asp-route-id="@Model.Order.Id">Выдать книги</a></div>
        <div class="btn btn-default"><a asp-action="Close" asp-controller="Observer" asp-route-id="@Model.Order.Id">Закрыть заказ</a></div>
        <div class="btn btn-default"><a asp-action="Index">Назад к списку</a></div>
    }
    else
    {
        <div class="btn btn-default"><a asp-action="Story">Назад к списку</a></div>
    }
</div>
